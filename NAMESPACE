S3method(plot, bathy)
S3method(summary, bathy)
S3method(plot, buffer)
S3method(print, buffer)
exportPattern("^[[:alpha:]]+")
<<<<<<< HEAD
importFrom("shape", "colorlegend")
=======
importFrom("adehabitatMA", "buffer", "adeoptions")
importFrom("DBI", "dbConnect", "dbWriteTable", "dbSendQuery", "fetch", "dbClearResult", "dbDisconnect", "dbListFields")
importFrom("ggplot2", "autoplot", "fortify", "aes", "aes_string", "geom_tile", "ggplot", "scale_x_continuous", "scale_y_continuous", "geom_raster", "geom_contour", "coord_quickmap", "coord_map", "scale_fill_gradientn", "scale_colour_gradientn")
importFrom("grDevices", "as.graphicsAnnot", "col2rgb", "colorRampPalette", "contourLines", "dev.new", "rgb", "xy.coords")
importFrom("graphics", "abline", "arrows", "axis", "box", "contour", "image", "lines", "locator", "par", "plot", "polygon", "rect", "segments", "strheight", "strwidth", "symbols", "text")
importFrom("methods", "as", "is")
importFrom("ncdf4", "nc_open", "ncvar_get")
importFrom("raster", "raster", "rasterize", "extent", "resample")
>>>>>>> 77f9444... Minor tweeks and correction of typos in NAMESPACE. Build date updated
importFrom("reshape2", "acast")
importFrom("DBI", "dbConnect", "dbWriteTable", "dbSendQuery", "fetch", "dbClearResult", "dbDisconnect", "dbListFields")
importFrom("RSQLite", "SQLite")
<<<<<<< HEAD
importFrom("adehabitatMA", "buffer", "adeoptions")
=======
importFrom("shape", "colorlegend")
>>>>>>> 77f9444... Minor tweeks and correction of typos in NAMESPACE. Build date updated
importFrom("sp", "SpatialPixelsDataFrame", "SpatialPointsDataFrame")
importFrom("grDevices", "as.graphicsAnnot", "col2rgb", "colorRampPalette", "contourLines", "dev.new", "rgb", "xy.coords")
importFrom("graphics", "abline", "arrows", "axis", "box", "contour", "image", "lines", "locator", "par", "plot", "polygon", "rect", "segments", "strheight", "strwidth", "symbols", "text")
importFrom("stats", "na.omit", "runif")
importFrom("utils", "combn", "read.table", "setTxtProgressBar", "txtProgressBar", "write.table")
importFrom("raster", "raster", "rasterize", "extent", "resample")
importFrom("methods", "as", "is")
importFrom("ncdf4", "nc_open", "ncvar_get")